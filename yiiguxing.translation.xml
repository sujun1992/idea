<application>
  <component name="AppStorage">
    <histories>
      <item value="Async" />
      <item value="Db Schema Create" />
      <item value="Maps the json represented by this object to a java object of the given type.&lt;br&gt; * Note: the desired target type is not validated and needs to be trusted" />
      <item value="is Var Args" />
      <item value="Set a new Number property in this node" />
      <item value="Returns an equivalent stream that is parallel. May return * itself, either because the stream was already parallel, or because * the underlying stream state was modified to be parallel" />
      <item value="Returns {@code true} if this method is a bridge" />
      <item value="the object the underlying method is invoked from" />
      <item value="spinjar" />
      <item value="Shading will break its strong encapsulation" />
      <item value="shaded" />
      <item value="flush the entity cache which inserts operations to the db operation manager" />
      <item value="Tom Baeyens" />
      <item value="merge" />
      <item value="NOTE: a proper implementation of merge() would fetch the entity from the database // and merge the state changes. For now, we simply always perform an update. // Supposedly, the &quot;proper&quot; implementation would reduce the number of situations where // optimistic locking results in a conflict." />
      <item value="Decides if an operation that failed for concurrent modifications can be tolerated, * or if {@link OptimisticLockingException} should be raised" />
      <item value="make created execution start in same activity instance" />
      <item value="is Async Before" />
      <item value="acquire Method Accessor" />
      <item value="Caller Sensitive" />
      <item value="If the method completes normally, the value it returns is * returned to the caller of invoke; if the value has a primitive * type, it is first appropriately wrapped in an object. However, * if the value has the type of an array of a primitive type, the * elements of the array are &lt;i&gt;not&lt;/i&gt; wrapped in objects; in * other words, an array of primitive type is returned. If the * underlying method return type is void, the invocation returns * null" />
      <item value="coerce" />
      <item value="sometimes the class identifier is at once a fully qualified class name" />
      <item value="Maps the json represented by this object to a java object of the given type. * Argument is to be supplied in Jackson's canonical type string format * (see {@link JavaType#toCanonical()}).&lt;br&gt; * Note: the desired target type is not validated and needs to be trusted." />
      <item value="has been added to an interface" />
      <item value="TLS/SSL connections" />
      <item value="Creates default factory based on the standard JSSE trust material * ({@code cacerts} file in the security properties directory). System properties * are not taken into consideration." />
      <item value="undo Delete" />
      <item value="A transient object which does not exist in the database but has been created and deleted in the current session. * It will not be flushed to the database and will be removed from the cache at the next flush" />
      <item value="if false, returned {@link SerializableValue}s * will not be deserialized (unless they are passed into this method as a * deserialized value or if the BPMN process triggers deserialization)" />
      <item value="and the required task parameters have been provided" />
      <item value="Marks a task as done and continues process execution. * * This method is typically called by a task list user interface * after a task form has been submitted by the" />
      <item value="Mock Expression Manager" />
      <item value="Central manager for all expressions" />
      <item value="Instances of this class are usually created using an" />
      <item value="A value expression is ready to be evaluated" />
      <item value="Tree Value Expression" />
      <item value="Conditional" />
      <item value="that will match when none of the nested class conditions match. Can * be used to create composite conditions" />
      <item value="Not Reactive Web Application Condition" />
      <item value="because NoneNestedConditions 1 matched 0 did not" />
      <item value="not loaded because NoneNestedConditions 1 matched 0 did not" />
      <item value="The following candidates were found but could not be injected" />
      <item value="Parameter 0 of method enableAuthorizationCheckGatewayFilterFactory in com.ai.ocp.config.OcpAutoConfiguration required a bean of type 'org.springframework.boot.web.client.RestTemplateBuilder' that could not be found" />
      <item value="None Nested Conditions" />
      <item value="expected at least 1 bean which qualifies as autowire candidate. Dependency annotations" />
      <item value="qualifying" />
      <item value="Configuration Service" />
      <item value="Whether to dispatch TRACE requests to the FrameworkServlet doService method" />
      <item value="dispatch Trace Request" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="714" />
        <entry key="ENGLISH" value="715" />
        <entry key="IRISH" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="GALICIAN" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="3" />
        <entry key="MALTESE" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>