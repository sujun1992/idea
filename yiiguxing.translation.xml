<application>
  <component name="AppStorage">
    <histories>
      <item value="create Timer Instances" />
      <item value="fire Historic Activity Instance Update" />
      <item value="create Sub Case Instance" />
      <item value="create Sub Process Instance" />
      <item value="case Execution Id" />
      <item value="Terminates the case execution identified by the given id. * Performs the transition from &lt;code&gt;ACTIVE&lt;/code&gt; to state &lt;code&gt;TERMINATED&lt;/code&gt; * if the case execution belongs to a case model or a task or a stage. * Performs the transition from &lt;code&gt;AVAILABLE&lt;/code&gt; to state &lt;code&gt;TERMINATED&lt;/code&gt; if the case * execution belongs to a milestone" />
      <item value="the id of the case execution to be terminated" />
      <item value="Suspends the process instance with the given id. This means that the * execution is stopped, so the &lt;i&gt;token state&lt;/i&gt; will not change. * However, actions that do not change token state, like setting/removing * variables, etc. will succeed" />
      <item value="If you have a process instance hierarchy, suspending * one process instance from the hierarchy will not suspend other * process instances from that hierarchy" />
      <item value="suspend Process Instance By Id" />
      <item value="configuration" />
      <item value="Create an incident associated with this execution" />
      <item value="In case this delegate execution is the process instance execution * and this process instance was started by a call activity, this method * returns the execution which executed the call activity in the super process instance." />
      <item value="seed" />
      <item value="iterate" />
      <item value="Returns a new {@code Collector} described by the given {@code supplier}, * {@code accumulator}, and {@code combiner} functions. The resulting * {@code Collector} has the {@code Collector.Characteristics.IDENTITY_FINISH} * characteristic." />
      <item value="of" />
      <item value="characteristics" />
      <item value="for Each Ordered" />
      <item value="Upgrade" />
      <item value="foo" />
      <item value="undeploy" />
      <item value="Callback used to run the bea" />
      <item value="Interface used to indicate that a bean should &lt;em&gt;run&lt;/em&gt; when it is contained within * a {@link SpringApplication}. Multiple {@link CommandLineRunner} beans can be defined * within the same application context and can be ordered using the {@link Ordered} * interface or {@link Order @Order} annotation. * &lt;p&gt; * If you need access to {@link ApplicationArguments} instead of the raw String array * consider using {@link ApplicationRunner}." />
      <item value="throwing Merger" />
      <item value="deploy" />
      <item value="mssql" />
      <item value="get Failed Operations" />
      <item value="execute Db Operations" />
      <item value="If we want to delete all table data as bulk operation, on tables which have self references, // We need to turn the foreign key check off on MySQL and MariaDB. // On other databases we have to do nothing, the mapped statement will be empty." />
      <item value="flush Operations" />
      <item value="is Ignore Foreign Keys For Next Flush" />
      <item value="Execute an update statement. The number of rows affected will be returned" />
      <item value="execute Non Empty Update Stmt" />
      <item value="perform Entity Operation" />
      <item value="A transient object does not exist in the database and has been created by the current session. * It will be INSERTed to the database and marked {@link #PERSISTENT} with the next flush" />
      <item value="flush the db operation manager" />
      <item value="flush the entity cache which inserts operations to the db operation manager" />
      <item value="is Dirty" />
      <item value="do not perform locking if H2 database is used. H2 uses table level locks // by default which may cause deadlocks if the deploy command needs to get a new // Id using the DbIdGenerator while performing a deployment." />
      <item value="set Metric Registry" />
      <item value="HikariConfigMXBean methods" />
      <item value="get Next Id" />
      <item value="ensure Generator Initialized" />
      <item value="Generator" />
      <item value="Strong Uuid Generator" />
      <item value="deactivate camunda auto configuration" />
      <item value="set Queue Capacity" />
      <item value="Update or create given variables for an execution (including parent scopes). If the variables are not already existing, they will be created in the process instance" />
      <item value="complete Current Task" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="633" />
        <entry key="ENGLISH" value="634" />
        <entry key="IRISH" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="GALICIAN" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>