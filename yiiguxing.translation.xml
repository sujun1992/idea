<application>
  <component name="AppStorage">
    <histories>
      <item value="provience" />
      <item value="vals" />
      <item value="vender" />
      <item value="Hexadecimal string contains non-hex character" />
      <item value="Stack trace" />
      <item value="draw" />
      <item value="Camber Lay Out" />
      <item value="Removes all of the mappings from this map (optional operation). * The map will be empty after this call returns" />
      <item value="Atomically increments by one the current value" />
      <item value="get And Increment" />
      <item value="Copy the property values of the given source bean into the given target bean. * &lt;p&gt;Note: The source and target classes do not have to match or even be derived * from each other, as long as the properties match. Any bean properties that the * source bean exposes but the target bean does not will silently be ignored" />
      <item value="To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath." />
      <item value="ethernetinterfaces" />
      <item value="ethernetrfaces" />
      <item value="Base implementation of {@link HttpClient} that also implements {@link Closeable}." />
      <item value="Releases all the current session resources, setting up the session for garbage collection. * This method &lt;b&gt;must&lt;/b&gt; always be called after finishing using the session, or the engine * will not free the memory used by the session. * If a logger has been registered on this session it will be automatically closed" />
      <item value="Fire all Matches on the Agenda" />
      <item value="threshold" />
      <item value="Implements Map.remove and related methods" />
      <item value="Initializes or doubles table size. If null, allocates in * accord with initial capacity target held in field threshold. * Otherwise, because we are using power-of-two expansion, the * elements from each bin must either stay at same index, or move * with a power of two offset in the new table" />
      <item value="Doug Lea" />
      <item value="delegate" />
      <item value="If the service state is {@link State#NEW}, this initiates service startup and returns * immediately. A stopped service may not be restarted." />
      <item value="Gwt Incompatible" />
      <item value="Indicator for transience of the value" />
      <item value="is Deserialized" />
      <item value="&lt;p&gt;Returns whether the value type is abstract. This is &lt;b&gt;not related * to the term &lt;i&gt;abstract&lt;/i&gt; in the Java language.&lt;/b&gt;&lt;/p&gt; * * Abstract value types cannot be used as types for variables but only used for querying." />
      <item value="is Primitive Value Type" />
      <item value="Indicates whether this type is primitive valued. Primitive valued types can be handled * natively by the process engine" />
      <item value="is Transient" />
      <item value="The actual value. May be null in case the value is null" />
      <item value="The type of the value. See ValueType for a list of built-in ValueTypes" />
      <item value="register To Jmx" />
      <item value="Object Name" />
      <item value="If this method successfully creates an MBean, a notification * is sent as described" />
      <item value="M Bean Server" />
      <item value="Clock" />
      <item value="delay Element" />
      <item value="assert" />
      <item value="get Variables By Key Value" />
      <item value="transient" />
      <item value="Handler type for incidents created on external task failure" />
      <item value="the maximum time to wait" />
      <item value="the time unit of the {@code timeout} argument" />
      <item value="Annotation that marks a method as a candidate for &lt;i&gt;asynchronous&lt;/i&gt; execution. * Can also be used at the type level, in which case all of the type's methods are * considered as asynchronous. Note, however, that {@code @Async} is not supported * on methods declared within a" />
      <item value="is Async" />
      <item value="Async" />
      <item value="Db Schema Create" />
      <item value="Maps the json represented by this object to a java object of the given type.&lt;br&gt; * Note: the desired target type is not validated and needs to be trusted" />
      <item value="is Var Args" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="763" />
        <entry key="ENGLISH" value="764" />
        <entry key="IRISH" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="GALICIAN" value="3" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="3" />
        <entry key="MALTESE" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SAMOAN" value="1" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>